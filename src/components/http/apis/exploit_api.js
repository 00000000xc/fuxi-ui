import request from './request';

const exploit = {
    jsonpTaskList () {
        return request.get("/exploit/jsonp/task");
    },
    jsonpTaskDelete (tid) {
        return request.delete("/exploit/jsonp/task/" + tid);
    },
    jsonpNewTask (data) {
        return request.post("/exploit/jsonp/task", data);
    },
    jsonpTaskResult (tid) {
        return request.get("exploit/jsonp/task/list/" + tid);
    },
    jsonpResultList () {
        return request.get("exploit/jsonp/result");
    },
    jsonpTaskResultDelete (rid) {
        return request.delete("exploit/jsonp/res/" + rid);
    },
    xssTaskList () {
        return request.get("/exploit/xss/task");
    },
    xssNewTask (data) {
        return request.post("/exploit/xss/task", data);
    },
    xssPayloadList () {
        return request.get("/exploit/xss/payload");
    },
    xssTaskDelete (tid) {
        return request.delete("/exploit/xss/task/" + tid);
    },
    xssPayloadDelete (pid) {
        return request.delete("/exploit/xss/payload/" + pid);
    },
    xssPayloadUpdate (pid, data) {
        return request.put("/exploit/xss/payload/" + pid, data);
    },
    xssPayloadNew (data) {
        return request.post("/exploit/xss/payload", data);
    },
    xssTaskResult(tid) {
        return request.get("/exploit/xss/task/res/" + tid);
    },
    xssResultList() {
        return request.get("exploit/xss/result");
    },
    xssResultDelete(rid) {
        return request.delete("/exploit/xss/result/" + rid);
    },
    httpRequestResult() {
        return request.get("/exploit/http");
    },
    httpRequestDelete(rid) {
        return request.delete("/exploit/http/" + rid);
    },
};

export default exploit;
